load_module /usr/lib/nginx/modules/ngx_rtmp_module.so;

events {
worker_connections 1024;
}

http {
server {
        listen 80 default_server;
        root /var/www/html;
        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
	        # proxy_pass http://localhost:8080;
        	# proxy_http_version 1.1;
	        # proxy_set_header Upgrade $http_upgrade;
        	# proxy_set_header Connection 'upgrade';
	        # proxy_set_header Host $host;
        	# proxy_cache_bypass $http_upgrade;
        }
	    location /socket {
		add_header Access-Control-Allow-Origin *;
		proxy_pass http://localhost:8081/;
	    }
	location /hls {
	    # Serve HLS fragments
	    types {
		application/vnd.apple.mpegurl m3u8;
		video/mp2t ts;
	    }
	    root /tmp;
	    add_header Cache-Control no-cache;
	    add_header Access-Control-Allow-Origin *;
	}
}

        sendfile on;
        keepalive_timeout 65;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;
}

rtmp {
        server {
                listen 1935;
                chunk_size 4096;
                allow publish all;

                application live {
                        live on;
                        record off;
                        hls on;
                        hls_path /tmp/hls;
                        hls_fragment 2s;
                        hls_playlist_length 2h;
                        hls_fragment_naming system;
                }
application transcode {
live on;
exec_static ffmpeg -err_detect ignore_err -listen 1 -i tcp://0.0.0.0:5000 -c:v libx264 -preset fast -crf 23 -x264-params keyint=60 -c:a aac -ac 2 -f flv rtmp://localhost:1935/live/tv;
# Note: rtmp doesn't support av1 or h265 so will need to change nginx module to enhanced-rtmp or directly stream to user using mpegts + broadcast.js
# As of July 2024 mpegts also doesn't support av1 (planned in future)
#exec_static ffmpeg -err_detect ignore_err -listen 1 -i tcp://0.0.0.0:5000 -c:v libsvtav1 -g 60 -c:a aac -ac 2
#exec ffmpeg -i rtmp://localhost:1935/transcode/$name -vf scale=-1:320 -c:v libx264 -c:a copy -f flv rtmp://localhost:1935/live/$name;
}

        }
}
